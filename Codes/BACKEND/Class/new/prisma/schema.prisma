// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  email String @unique
  name String?
  posts Post[]
  comments Comment[]
  enrollments Enrollment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post{
  id String @id @default(uuid())
  title String
  description String
  authorId String
  comments Comment[]
  //PostId String

  author User @relation(fields: [authorId], references: [id])
}

model Comment{
  id String @id @default(uuid())
  comment String
  authorId String
  PostId String
  //courses Courses[]
  author User @relation(fields: [authorId], references: [id])
  PostPerson Post @relation(fields: [PostId], references: [id])
  
}

model Courses{
  id String @id @default(uuid())
  name String
  credits Int
  enrollments Enrollment[]
  //userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  
}


model Enrollment{
  id String @id @default(uuid())
 // userId String
  courseId String
  course Courses @relation(fields: [courseId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //enrolledAt DateTime @default(now())
}

